name: Security Check (Quick)

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  quick-security-check:
    runs-on: macos-latest
    env:
      HOMEBREW_GITHUB_API_TOKEN: ${{ secrets.HOMEBREW_GITHUB_API_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Need full history to check file changes

      - name: Detect changed files
        id: changed-files
        run: |
          echo "üîç Detecting changed files..."

          # For PRs, compare against the base branch
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            BASE_SHA="${{ github.event.pull_request.base.sha }}"
            HEAD_SHA="${{ github.event.pull_request.head.sha }}"
          else
            # For pushes, compare with the previous commit
            BASE_SHA="${{ github.event.before }}"
            HEAD_SHA="${{ github.sha }}"
          fi

          # Get list of changed files
          CHANGED_FILES=$(git diff --name-only $BASE_SHA..$HEAD_SHA 2>/dev/null || git diff --name-only HEAD~1..HEAD)

          # Check if Brewfile was modified
          if echo "$CHANGED_FILES" | grep -q "brew/Brewfile"; then
            echo "brewfile_changed=true" >> $GITHUB_OUTPUT
            echo "‚úì Brewfile changes detected - will run targeted security check"
          else
            echo "brewfile_changed=false" >> $GITHUB_OUTPUT
            echo "‚ÑπÔ∏è No Brewfile changes detected"
          fi

          # Check if package.json was modified
          if echo "$CHANGED_FILES" | grep -q "package.json"; then
            echo "package_json_changed=true" >> $GITHUB_OUTPUT
            echo "‚úì package.json changes detected - will run npm audit"
          else
            echo "package_json_changed=false" >> $GITHUB_OUTPUT
            echo "‚ÑπÔ∏è No package.json changes detected"
          fi

          # Output changed files for review
          echo "üìù Changed files:"
          echo "$CHANGED_FILES" | head -20

          # Save for artifact
          echo "$CHANGED_FILES" > changed-files.txt

      - name: Quick Brewfile security check
        if: steps.changed-files.outputs.brewfile_changed == 'true'
        run: |
          echo "üç∫ Running targeted Homebrew security check for changed packages..."

          # Install/update Homebrew if needed
          if ! command -v brew >/dev/null 2>&1; then
            /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          fi

          # Get the diff of the Brewfile
          cd brew
          echo "üì¶ Analyzing Brewfile changes..."

          # Extract added or modified package lines from the diff
          git diff ${{ github.event.before }}..${{ github.sha }} Brewfile 2>/dev/null | \
            grep '^+brew ' | sed 's/+brew "\([^"]*\)".*/\1/' > new-packages.txt || \
            git diff HEAD~1..HEAD Brewfile | grep '^+brew ' | sed 's/+brew "\([^"]*\)".*/\1/' > new-packages.txt

          if [ -s new-packages.txt ]; then
            echo "üîç New/modified packages to check:"
            cat new-packages.txt
            echo ""

            # Quick audit only the new/modified packages
            vulnerabilities_found=false
            while IFS= read -r package; do
              echo "Checking: $package"
              if brew audit --formula --online "$package" 2>&1 | grep -i "error\|warning\|vulnerabilit\|cve\|security"; then
                vulnerabilities_found=true
                echo "‚ö†Ô∏è Issues found in: $package"
              else
                echo "‚úÖ $package - OK"
              fi
            done < new-packages.txt

            if [ "$vulnerabilities_found" = "true" ]; then
              echo "## ‚ö†Ô∏è Security Issues in New Packages" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "Security issues detected in newly added/modified Homebrew packages." >> $GITHUB_STEP_SUMMARY
              echo "Please review the output above and consider alternatives." >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "For a comprehensive scan of all packages, check the [weekly security scan](https://github.com/${{ github.repository }}/actions/workflows/security-scheduled.yml)." >> $GITHUB_STEP_SUMMARY
            else
              echo "‚úÖ New/modified packages passed security check" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "‚ÑπÔ∏è No new packages added in Brewfile"
          fi

      - name: Quick npm security check
        if: steps.changed-files.outputs.package_json_changed == 'true'
        run: |
          echo "üîç Running quick npm security check..."

          if [ -f "package.json" ]; then
            # Only audit for high and critical vulnerabilities in quick check
            npm audit --audit-level=high || {
              echo "‚ö†Ô∏è npm audit found high/critical vulnerabilities"
              echo "## ‚ö†Ô∏è Node.js Security Issues" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "High or critical vulnerabilities detected in npm dependencies." >> $GITHUB_STEP_SUMMARY
              echo "Run \`npm audit\` locally for details and \`npm audit fix\` to resolve." >> $GITHUB_STEP_SUMMARY
            }
          fi

      - name: Repository security quick scan
        run: |
          echo "üîí Running quick repository security checks..."

          # Quick check for obvious security issues in changed files only
          if [ -f changed-files.txt ]; then
            security_issues=false

            # Check changed files for potential secrets (basic patterns)
            echo "Scanning changed files for potential secrets..."

            while IFS= read -r file; do
              # Skip deleted files
              [ ! -f "$file" ] && continue

              # Quick scan for obvious patterns
              if grep -E -i "(api[_-]?key|password|secret|token).*=.*['\"][^'\"]{10,}['\"]" "$file" 2>/dev/null | head -3; then
                echo "‚ö†Ô∏è Potential secret in: $file"
                security_issues=true
              fi
            done < changed-files.txt

            if [ "$security_issues" = "true" ]; then
              echo "## ‚ö†Ô∏è Security Review Needed" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "Potential secrets or sensitive data detected in changed files." >> $GITHUB_STEP_SUMMARY
              echo "Please review the flagged files before merging." >> $GITHUB_STEP_SUMMARY
            else
              echo "‚úÖ No obvious security issues in changed files"
            fi
          fi

      - name: Generate quick scan summary
        if: always()
        run: |
          echo "üìä Quick Security Scan Complete" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # Provide context about the scan
          echo "This was a **quick security check** that only scanned:" >> $GITHUB_STEP_SUMMARY
          echo "- Changed files for potential secrets" >> $GITHUB_STEP_SUMMARY

          if [ "${{ steps.changed-files.outputs.brewfile_changed }}" = "true" ]; then
            echo "- New/modified Homebrew packages" >> $GITHUB_STEP_SUMMARY
          fi

          if [ "${{ steps.changed-files.outputs.package_json_changed }}" = "true" ]; then
            echo "- npm dependencies (high/critical only)" >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "üìÖ **Full security scans** run weekly on Mondays at 6 AM UTC." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # Add link to trigger full scan if needed
          echo "Need a full scan now? [Run it manually](https://github.com/${{ github.repository }}/actions/workflows/security-scheduled.yml)" >> $GITHUB_STEP_SUMMARY

          # Add timestamp
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "---" >> $GITHUB_STEP_SUMMARY
          echo "*Quick scan completed at: $(date -u)*" >> $GITHUB_STEP_SUMMARY

      - name: Upload changed files artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: changed-files-${{ github.run_id }}
          path: changed-files.txt
          retention-days: 7
