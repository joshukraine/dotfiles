name: Security Scanning

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]
  schedule:
    # Run security scan every Monday at 6 AM UTC
    - cron: '0 6 * * 1'

jobs:
  dependency-scan:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install security scanning tools
        run: |
          # Install Homebrew if not present
          if ! command -v brew >/dev/null 2>&1; then
            /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          fi

          # Update Homebrew for latest security information
          brew update

          echo "=== Security Tools Check ==="
          echo "Homebrew version: $(brew --version | head -1)"

      - name: Homebrew security audit
        run: |
          echo "🔍 Running Homebrew security audit..."

          # Check if Brewfile exists
          if [ ! -f "brew/Brewfile" ]; then
            echo "ℹ️ No Brewfile found, skipping Homebrew dependency scan"
            exit 0
          fi

          # Install dependencies needed for audit
          cd brew
          echo "📦 Installing dependencies for security audit..."
          brew bundle check --verbose || brew bundle install

          # Run security audit on installed packages
          echo "🛡️ Performing security audit on Homebrew packages..."

          # Get list of packages from Brewfile
          packages=$(grep -E "^brew " Brewfile | sed 's/brew "\([^"]*\)".*/\1/' | tr '\n' ' ')

          if [ -n "$packages" ]; then
            echo "Auditing packages: $packages"

            # Check for vulnerabilities in installed packages
            vulnerabilities_found=false

            for package in $packages; do
              echo "Checking $package..."
              if brew audit --vulnerabilities "$package" 2>/dev/null | grep -i "vulnerabilit\|cve\|security"; then
                vulnerabilities_found=true
                echo "⚠️ Potential security issue found in $package"
              fi
            done

            # Also run general audit
            echo "Running general Homebrew audit..."
            if brew audit --vulnerabilities 2>&1 | grep -i "vulnerabilit\|cve\|security"; then
              vulnerabilities_found=true
            fi

            if [ "$vulnerabilities_found" = "true" ]; then
              echo "❌ Security vulnerabilities detected in dependencies"
              echo "Please review and update affected packages"
              # Don't fail the build on vulnerabilities - just warn
              echo "## ⚠️ Security Vulnerabilities Detected" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "Security vulnerabilities were detected in Homebrew dependencies." >> $GITHUB_STEP_SUMMARY
              echo "Please review the audit output above and update affected packages." >> $GITHUB_STEP_SUMMARY
            else
              echo "✅ No known security vulnerabilities found"
              echo "## ✅ Security Scan Complete" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "No known security vulnerabilities found in Homebrew dependencies." >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "ℹ️ No packages found in Brewfile to audit"
          fi

      - name: Node.js dependency scan
        run: |
          echo "🔍 Checking for Node.js dependencies..."

          # Check if package.json exists
          if [ -f "package.json" ]; then
            echo "📦 Found package.json, scanning Node.js dependencies..."

            # Install npm audit
            npm audit --audit-level=moderate || {
              echo "⚠️ npm audit found issues"
              echo "## Node.js Security Issues" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "npm audit found potential security issues." >> $GITHUB_STEP_SUMMARY
              echo "Run \`npm audit\` locally for details." >> $GITHUB_STEP_SUMMARY
            }
          else
            echo "ℹ️ No package.json found, skipping Node.js security scan"
          fi

      - name: Repository security check
        run: |
          echo "🔒 Running repository security checks..."

          # Check for common security issues
          security_issues=()

          # Check for potential secrets in common locations
          echo "Checking for potential secrets..."

          if find . -name "*.env" -not -path "./.git/*" -not -path "./scratchpads/*" | head -5 | grep -q "."; then
            echo "⚠️ Found .env files - ensure they don't contain secrets"
            security_issues+=("Found .env files")
          fi

          if find . -name "*key*" -not -path "./.git/*" -not -path "./scratchpads/*" -not -name "*.pub" | head -5 | grep -q "."; then
            echo "⚠️ Found files with 'key' in name - verify they don't contain secrets"
            security_issues+=("Found files with 'key' in name")
          fi

          if find . -name "*secret*" -not -path "./.git/*" -not -path "./scratchpads/*" | head -5 | grep -q "."; then
            echo "⚠️ Found files with 'secret' in name - verify they don't contain secrets"
            security_issues+=("Found files with 'secret' in name")
          fi

          # Check for hardcoded API keys or tokens (basic patterns)
          if grep -r -E "(api_key|api-key|apikey|token|password).*=.*['\"][a-zA-Z0-9]{20,}['\"]" . \
             --include="*.sh" --include="*.fish" --include="*.zsh" --include="*.yml" --include="*.yaml" \
             --exclude-dir=".git" --exclude-dir="scratchpads" --exclude="security.yml" 2>/dev/null | head -3 | grep -q "."; then
            echo "⚠️ Found potential hardcoded secrets - please review"
            security_issues+=("Potential hardcoded secrets found")
          fi

          # Summary
          if [ ${#security_issues[@]} -gt 0 ]; then
            echo "## ⚠️ Repository Security Review Needed" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "The following potential security issues were detected:" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            for issue in "${security_issues[@]}"; do
              echo "- $issue" >> $GITHUB_STEP_SUMMARY
            done
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Note**: These are automated detections. Please review manually to confirm actual security risks." >> $GITHUB_STEP_SUMMARY
          else
            echo "✅ No obvious security issues detected in repository"
          fi

      - name: Generate security report
        if: always()
        run: |
          echo "📊 Generating security scan summary..."

          # Add general security information to summary
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Security Scan Details" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # Count files scanned
          if [ -f "brew/Brewfile" ]; then
            brew_packages=$(grep -c "^brew " brew/Brewfile || echo "0")
            echo "- **Homebrew packages scanned**: $brew_packages" >> $GITHUB_STEP_SUMMARY
          fi

          if [ -f "package.json" ]; then
            echo "- **Node.js dependencies**: Scanned with npm audit" >> $GITHUB_STEP_SUMMARY
          fi

          # Add scan timestamp
          echo "- **Scan completed**: $(date -u)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # Add recommendations
          echo "### Security Recommendations" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- Keep dependencies updated with automated update workflow" >> $GITHUB_STEP_SUMMARY
          echo "- Review and address any vulnerabilities found above" >> $GITHUB_STEP_SUMMARY
          echo "- Use GitHub Dependabot for additional security monitoring" >> $GITHUB_STEP_SUMMARY
          echo "- Regular security audits help maintain a secure codebase" >> $GITHUB_STEP_SUMMARY
