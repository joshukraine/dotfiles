#!/usr/bin/env bash
#
# Check for uncommitted changes and optionally prompt for confirmation
# Usage: git-check-uncommitted [--prompt]
#
# Exit codes:
#   0 - No uncommitted changes OR user chose to continue
#   1 - Uncommitted changes exist AND (no prompt OR user chose to abort)
#   2 - Not a git repository

set -euo pipefail

# Check if we're in a git repository
if ! git rev-parse --is-inside-work-tree >/dev/null 2>&1; then
  echo "Error: Not a git repository" >&2
  exit 2
fi

# Check for uncommitted changes
if git diff-index --quiet HEAD -- 2>/dev/null; then
  # No uncommitted changes
  exit 0
fi

# Uncommitted changes exist
if [[ "${1:-}" == "--prompt" ]]; then
  echo "Warning: You have uncommitted changes. Consider committing or stashing them first."
  printf "Continue anyway? (y/N): "
  read -r response
  if [[ "${response}" == "y" || "${response}" == "Y" ]]; then
    exit 0
  else
    echo "Aborted."
    exit 1
  fi
else
  # Just report the status
  exit 1
fi
