#!/usr/bin/env bash
#
# Show branch ahead/behind status vs origin/master for all branches
#
# Usage: git-brst
# Arguments: None
#
# Examples:
#   git-brst               # Show all branches with ahead/behind counts
#
# Returns: List of branches showing commits ahead/behind origin/master
# Output format: branch_name (ahead X) | (behind Y) origin/master
#
# Example output:
#   dns_check (ahead 1) | (behind 112) origin/master
#   master (ahead 2) | (behind 0) origin/master
#
# Source: https://github.com/Stratus3D/dotfiles/blob/4565b251354bed240b55c83fc15d226aa8f798a5/scripts/git/git-branch-status

TMP_FILE_NAME=/tmp/git_upstream_status_delta

git for-each-ref --format="%(refname:short) %(upstream:short)" refs/ \
  | while read -r local remote; do
    if [ -x "${remote}" ]; then
      branches=("${local}")
    else
      branches=("${local}" "${remote}")
    fi
    for branch in "${branches[@]}"; do
      master="origin/master"
      git rev-list --left-right "${branch}"..."${master}" -- 2>/dev/null >${TMP_FILE_NAME} || continue
      LEFT_AHEAD=$(grep -c '^<' ${TMP_FILE_NAME})
      RIGHT_AHEAD=$(grep -c '^>' ${TMP_FILE_NAME})
      echo "${branch} (ahead ${LEFT_AHEAD}) | (behind ${RIGHT_AHEAD}) ${master}"
    done
  done | grep -v "^origin/master" | sort | uniq
