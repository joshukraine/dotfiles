#!/usr/bin/env bash
#
# Remove branches merged into default branch
# Usage: gbrm

set -euo pipefail

# Check if we're in a Git repository
if ! git rev-parse --is-inside-work-tree >/dev/null 2>&1; then
  echo "Not a git repository."
  exit 1
fi

# Determine default branch
default_branch=""

# Try to get default branch from remote
if git remote | grep -q "^origin$"; then
  default_branch=$(git remote show origin 2>/dev/null | awk '/HEAD branch/ { print $NF }')
fi

# Fallback if needed
if [[ -z "${default_branch}" ]]; then
  if git show-ref --quiet refs/heads/main; then
    default_branch="main"
  elif git show-ref --quiet refs/heads/master; then
    default_branch="master"
  else
    echo "Could not determine default branch."
    exit 1
  fi
fi

echo "Removing branches merged into ${default_branch}..."
branches_to_remove=$(git branch --merged "${default_branch}" | grep -v "^\*\|  ${default_branch}" || true)
if [[ -n "${branches_to_remove}" ]]; then
  echo "${branches_to_remove}" | xargs -n 1 git branch -d
else
  echo "No branches to remove."
fi
