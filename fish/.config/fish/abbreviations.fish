# Fish abbreviations - Generated from shared/abbreviations.yaml
# DO NOT EDIT THIS FILE DIRECTLY - Edit shared/abbreviations.yaml instead
# Regenerate with: bash shared/generate-fish-abbr.sh
#
# https://fishshell.com/docs/current/cmds/abbr.html

# unix
abbr -a -g c 'clear'
abbr -a -g cv 'command -v'
abbr -a -g df 'df -h'
abbr -a -g du 'du -h'
abbr -a -g dud 'du -d 1 -h'
abbr -a -g duf 'du -sh *'
abbr -a -g cat 'bat'
abbr -a -g cp 'gcp -iv'
abbr -a -g l 'ls -lhF --git'
abbr -a -g mkdir 'mkdir -pv'
abbr -a -g mv 'mv -iv'

# system
abbr -a -g fast 'fastfetch'

# claude code
abbr -a -g cl 'claude'
abbr -a -g clsp 'claude --dangerously-skip-permissions'
abbr -a -g clh 'claude --help'
abbr -a -g clv 'claude --version'
abbr -a -g clr 'claude --resume'
abbr -a -g clc 'claude --continue'
abbr -a -g clp 'claude --print'
abbr -a -g clcp 'claude --continue --print'
abbr -a -g clup 'claude update'
abbr -a -g clmcp 'claude mcp'

# homebrew
abbr -a -g brc 'brew cleanup'
abbr -a -g brb 'brew bundle'
abbr -a -g brd 'brew doctor'
abbr -a -g brg 'brew upgrade'
abbr -a -g bri 'brew info'
abbr -a -g brl 'brew list -1'
abbr -a -g brlf 'brew list | fzf'
abbr -a -g bro 'brew outdated'
abbr -a -g brs 'brew search'
abbr -a -g bru 'brew update'
abbr -a -g bs0 'brew services stop'
abbr -a -g bs1 'brew services start'
abbr -a -g bsc 'brew services cleanup'
abbr -a -g bsl 'brew services list'
abbr -a -g bsr 'brew services restart'
abbr -a -g bsv 'brew services'

# config dirs
abbr -a -g cdot 'cd $DOTFILES'
abbr -a -g cdxc 'cd $XDG_CONFIG_HOME'
abbr -a -g cdfi 'cd $XDG_CONFIG_HOME/fish'
abbr -a -g cdnv 'cd $XDG_CONFIG_HOME/nvim'
abbr -a -g cdxd 'cd $XDG_DATA_HOME'
abbr -a -g cdxa 'cd $XDG_CACHE_HOME'
abbr -a -g cdxs 'cd $XDG_STATE_HOME'
abbr -a -g cdlb 'cd $HOME/.local/bin'
abbr -a -g cdbn 'cd $HOME/.bin'

# navigation
abbr -a -g .. 'cd ..'
abbr -a -g ... 'cd ../../'
abbr -a -g .... 'cd ../../../'
abbr -a -g ..... 'cd ../../../../'
abbr -a -g - 'cd -'

# tree
abbr -a -g t2 'll --tree --level=2'
abbr -a -g t2a 'll --tree --level=2 -a'
abbr -a -g t3 'll --tree --level=3'
abbr -a -g t3a 'll --tree --level=3 -a'
abbr -a -g t4 'll --tree --level=4'
abbr -a -g t4a 'll --tree --level=4 -a'

# dev tools
abbr -a -g gg 'lazygit'
abbr -a -g hm 'hivemind'

# markdown
abbr -a -g mdl 'markdownlint-cli2 --config ~/.markdownlint.yaml'
abbr -a -g mdlf 'markdownlint-cli2 --config ~/.markdownlint.yaml --fix'
abbr -a -g mdla 'markdownlint-cli2 --config ~/.markdownlint.yaml '**/*.md''
abbr -a -g mdlaf 'markdownlint-cli2 --config ~/.markdownlint.yaml --fix '**/*.md''

# local servers
abbr -a -g hts 'http-server'
abbr -a -g lvs 'live-server'

# neovim
abbr -a -g nv 'nvim'
abbr -a -g vi 'nvim'
abbr -a -g vi0 'nvim -u NONE'
abbr -a -g vir 'nvim -R'
abbr -a -g vv 'nvim --version | less'

# git
abbr -a -g ga 'git add'
abbr -a -g gaa 'git add --all'
abbr -a -g gap 'git add --patch'
abbr -a -g gb 'git branch'
abbr -a -g gba 'git branch --all'
abbr -a -g gbm 'git branch -m'
abbr -a -g gbr 'git branch --remote'
abbr -a -g gca 'git commit --amend'
abbr -a -g gcl 'git clone'
abbr -a -g gcm 'git cm'
abbr -a -g gco 'git checkout'
abbr -a -g gcob 'git checkout -b'
abbr -a -g gcp 'git cherry-pick'
abbr -a -g gd 'git diff'
abbr -a -g gdc 'git diff --cached'
abbr -a -g gdt 'git difftool'
abbr -a -g gf 'git fetch'
abbr -a -g gfa 'git fetch --all'
abbr -a -g gfp 'git fetch --prune'
abbr -a -g gfu 'git fetch upstream'
abbr -a -g gl 'git l'
abbr -a -g glg 'git lg'
abbr -a -g gp 'git push'
abbr -a -g gpl 'git pull'
abbr -a -g gpsf 'git push --force-with-lease'
abbr -a -g gpst 'git push --tags'
abbr -a -g gpub 'git publish'
abbr -a -g gpuo 'git push -u origin'
abbr -a -g gra 'git remote add'
abbr -a -g grb 'git rebase'
abbr -a -g grba 'git rebase --abort'
abbr -a -g grbc 'git rebase --continue'
abbr -a -g grbi 'git rebase -i'
abbr -a -g gre 'git reset'
abbr -a -g grso 'git remote set-url origin'
abbr -a -g grsu 'git remote set-url'
abbr -a -g grup 'git remote add upstream'
abbr -a -g grv 'git remote -v'
abbr -a -g gsh 'git show'
abbr -a -g gss 'git stash'
abbr -a -g gssa 'git stash apply'
abbr -a -g gssd 'git stash drop'
abbr -a -g gssl 'git stash list'
abbr -a -g gssp 'git stash pop'
abbr -a -g gsss 'git stash save'
abbr -a -g gst 'git status'
abbr -a -g gsts 'git status --short'
abbr -a -g gt 'git tag'

# docker
abbr -a -g dc 'docker compose'
abbr -a -g dcu 'docker compose up'
abbr -a -g dcud 'docker compose up -d'
abbr -a -g dcb 'docker compose up --build'
abbr -a -g dcbd 'docker compose up --build -d'
abbr -a -g dcd 'docker compose down'
abbr -a -g dcdv 'docker compose down -v'
abbr -a -g dce 'docker compose exec'
abbr -a -g dcr 'docker compose restart'
abbr -a -g dl 'docker logs'
abbr -a -g dim 'docker images'
abbr -a -g dnet 'docker network'
abbr -a -g dps 'docker ps'
abbr -a -g dpsa 'docker ps -a'
abbr -a -g dsp 'docker system prune --all'
abbr -a -g d 'docker'
abbr -a -g db 'docker build'
abbr -a -g dcl 'docker compose logs'
abbr -a -g dclf 'docker compose logs -f'
abbr -a -g dcps 'docker compose ps'
abbr -a -g dcpull 'docker compose pull'
abbr -a -g dcrm 'docker compose rm'
abbr -a -g dcstart 'docker compose start'
abbr -a -g dcstop 'docker compose stop'
abbr -a -g de 'docker exec'
abbr -a -g dei 'docker exec -i'
abbr -a -g deit 'docker exec -it'
abbr -a -g dpu 'docker pull'
abbr -a -g drm 'docker rm'
abbr -a -g drmi 'docker rmi'
abbr -a -g drun 'docker run'
abbr -a -g dst 'docker start'
abbr -a -g dstp 'docker stop'

# rails
abbr -a -g RED 'RAILS_ENV=development'
abbr -a -g REP 'RAILS_ENV=production'
abbr -a -g RET 'RAILS_ENV=test'
abbr -a -g bbi 'bin/bundle install'
abbr -a -g bbo 'bin/bundle outdated'
abbr -a -g bbu 'bin/bundle update'
abbr -a -g bd 'bin/dev'
abbr -a -g cred 'bin/rails credentials:edit --environment'
abbr -a -g crsp 'env COVERAGE=true bin/rspec .'
abbr -a -g ocr 'overmind connect rails'
abbr -a -g om 'overmind start'
abbr -a -g psp 'bin/rake parallel:spec'
abbr -a -g r 'bin/rails'
abbr -a -g rc 'bin/rails console'
abbr -a -g rcop 'rubocop'
abbr -a -g rdb 'bin/rails dbconsole'
abbr -a -g rdbc 'bin/rails db:create'
abbr -a -g rdbd 'bin/rails db:drop'
abbr -a -g rdm 'bin/rails db:migrate'
abbr -a -g rdms 'bin/rails db:migrate:status'
abbr -a -g rdr 'bin/rails db:rollback'
abbr -a -g rdr2 'bin/rails db:rollback STEP=2'
abbr -a -g rdr3 'bin/rails db:rollback STEP=3'
abbr -a -g rdbs 'bin/rails db:seed'
abbr -a -g rg 'bin/rails generate'
abbr -a -g rgc 'bin/rails generate controller'
abbr -a -g rgm 'bin/rails generate migration'
abbr -a -g rgs 'bin/rails generate stimulus'
abbr -a -g rr 'bin/rails routes'
abbr -a -g rrc 'bin/rails routes controller'
abbr -a -g rrg 'bin/rails routes | grep'
abbr -a -g rs 'bin/rails server'
abbr -a -g rsp 'bin/rspec .'
abbr -a -g rtp 'bin/rails db:test:prepare'

# ruby
abbr -a -g b 'bundle'
abbr -a -g be 'bundle exec'
abbr -a -g ber 'bundle exec rspec'
abbr -a -g beri 'bundle exec rspec --init'
abbr -a -g bes 'bundle exec standardrb'
abbr -a -g besf 'bundle exec standardrb --fix'
abbr -a -g gel 'gem cleanup'
abbr -a -g gemv 'gem environment'
abbr -a -g gins 'gem install'
abbr -a -g gli 'gem list'
abbr -a -g gout 'gem outdated'
abbr -a -g guns 'gem uninstall'
abbr -a -g gup 'gem update'
abbr -a -g gus 'gem update --system'

# npm
abbr -a -g nb 'npm build'
abbr -a -g ncl 'npm clean'
abbr -a -g nd 'npm run dev'
abbr -a -g ndv 'npm develop'
abbr -a -g ni 'npm install'
abbr -a -g nid 'npm install -D'
abbr -a -g nig 'npm install -g'
abbr -a -g nit 'npm init'
abbr -a -g ns 'npm serve'
abbr -a -g nst 'npm start'
abbr -a -g nt 'npm test'

# asdf
abbr -a -g ail 'asdf install lua'
abbr -a -g ain 'asdf install nodejs'
abbr -a -g ainl 'asdf install nodejs latest'
abbr -a -g aip 'asdf install python'
abbr -a -g air 'asdf install ruby'
abbr -a -g airl 'asdf install ruby latest'
abbr -a -g ala 'asdf list all'
abbr -a -g ali 'asdf list'
abbr -a -g aui 'asdf install'
abbr -a -g acl 'asdf current'
abbr -a -g aun 'asdf uninstall'
abbr -a -g ares 'asdf reshim'
abbr -a -g asu 'asdf set -u'
abbr -a -g ast 'asdf set'

# tmux
abbr -a -g tl 'tmux ls'
abbr -a -g tlw 'tmux list-windows'

# tmuxinator
abbr -a -g mux 'tmuxinator'
abbr -a -g ms 'tmuxinator start'
abbr -a -g msb1 'tmuxinator start bfo1'
abbr -a -g msb2 'tmuxinator start bfo2'
abbr -a -g msbc 'tmuxinator start bf_curriculum'
abbr -a -g msc 'tmuxinator start comix_distro'
abbr -a -g msd 'tmuxinator start dot'
abbr -a -g mse 'tmuxinator start euroteamoutreach'
abbr -a -g msl 'tmuxinator start laptop'
abbr -a -g msm 'tmuxinator start mux'
abbr -a -g mso 'tmuxinator start ofreport'

# yarn
abbr -a -g y 'yarn'
abbr -a -g ya 'yarn add'
abbr -a -g yad 'yarn add --dev'
abbr -a -g yag 'yarn add --global'
abbr -a -g yap 'yarn add --peer'
abbr -a -g yarn-upgrade 'yarn upgrade-interactive --latest'
abbr -a -g yb 'yarn build'
abbr -a -g ycc 'yarn cache clean'
abbr -a -g yd 'yarn dev'
abbr -a -g yga 'yarn global add'
abbr -a -g ygl 'yarn global list'
abbr -a -g ygr 'yarn global remove'
abbr -a -g ygu 'yarn global upgrade'
abbr -a -g yh 'yarn help'
abbr -a -g yi 'yarn install'
abbr -a -g yic 'yarn install --check-files'
abbr -a -g yif 'yarn install --frozen-lockfile'
abbr -a -g yin 'yarn init'
abbr -a -g yln 'yarn link'
abbr -a -g yls 'yarn list'
abbr -a -g yout 'yarn outdated'
abbr -a -g yp 'yarn pack'
abbr -a -g ypub 'yarn publish'
abbr -a -g yr 'yarn run'
abbr -a -g yre 'yarn remove'
abbr -a -g ys 'yarn serve'
abbr -a -g yst 'yarn start'
abbr -a -g yt 'yarn test'
abbr -a -g ytc 'yarn test --coverage'
abbr -a -g yuc 'yarn global upgrade && yarn cache clean'
abbr -a -g yui 'yarn upgrade-interactive'
abbr -a -g yuil 'yarn upgrade-interactive --latest'
abbr -a -g yup 'yarn upgrade'
abbr -a -g yv 'yarn version'
abbr -a -g yw 'yarn workspace'
abbr -a -g yws 'yarn workspaces'

# postgresql
abbr -a -g psq 'pgcli -d postgres'

# middleman
abbr -a -g mm 'bundle exec middleman'
abbr -a -g mmb 'bundle exec middleman build'
abbr -a -g mmbc 'bundle exec middleman build --clean'
abbr -a -g mmc 'bundle exec middleman console'
abbr -a -g mms 'bundle exec middleman server'


# Note: Some abbreviations have been replaced by smart functions:
# - gpum: Use gpum function (smart git push with upstream tracking)
# - grbm: Use grbm function (smart git rebase against default branch)
# - gcom: Use gcom function (smart git checkout default branch)
